namespace PlotlyH5
{
    /*////////////////////////////////
    /// THIS FILE IS AUTO-GENERATED //
    ///      by interopDocument     //
    ////////////////////////////////*/
    using System;
    using Types;
    using System.Collections.Generic;
    using System.Linq;

    internal static class Interop
    {
        public static Box<IPlotProperty> mkPlotAttr(string key, object value) => Box<IPlotProperty>.For(key, value);
        public static Box<IAaxisProperty> mkAaxisAttr(string key, object value) => Box<IAaxisProperty>.For(key, value);
        public static Box<IAggregateProperty> mkAggregateAttr(string key, object value) => Box<IAggregateProperty>.For(key, value);
        public static Box<IAggregationProperty> mkAggregationAttr(string key, object value) => Box<IAggregationProperty>.For(key, value);
        public static Box<IAggregationsProperty> mkAggregationsAttr(string key, object value) => Box<IAggregationsProperty>.For(key, value);
        public static Box<IAngularaxisProperty> mkAngularaxisAttr(string key, object value) => Box<IAngularaxisProperty>.For(key, value);
        public static Box<IAnimationProperty> mkAnimationAttr(string key, object value) => Box<IAnimationProperty>.For(key, value);
        public static Box<IAnnotationProperty> mkAnnotationAttr(string key, object value) => Box<IAnnotationProperty>.For(key, value);
        public static Box<IAnnotationsProperty> mkAnnotationsAttr(string key, object value) => Box<IAnnotationsProperty>.For(key, value);
        public static Box<IAreaProperty> mkAreaAttr(string key, object value) => Box<IAreaProperty>.For(key, value);
        public static Box<IAspectratioProperty> mkAspectratioAttr(string key, object value) => Box<IAspectratioProperty>.For(key, value);
        public static Box<IAxisProperty> mkAxisAttr(string key, object value) => Box<IAxisProperty>.For(key, value);
        public static Box<IBarProperty> mkBarAttr(string key, object value) => Box<IBarProperty>.For(key, value);
        public static Box<IBarpolarProperty> mkBarpolarAttr(string key, object value) => Box<IBarpolarProperty>.For(key, value);
        public static Box<IBaxisProperty> mkBaxisAttr(string key, object value) => Box<IBaxisProperty>.For(key, value);
        public static Box<IBorderProperty> mkBorderAttr(string key, object value) => Box<IBorderProperty>.For(key, value);
        public static Box<IBoxProperty> mkBoxAttr(string key, object value) => Box<IBoxProperty>.For(key, value);
        public static Box<IButtonProperty> mkButtonAttr(string key, object value) => Box<IButtonProperty>.For(key, value);
        public static Box<IButtonsProperty> mkButtonsAttr(string key, object value) => Box<IButtonsProperty>.For(key, value);
        public static Box<ICameraProperty> mkCameraAttr(string key, object value) => Box<ICameraProperty>.For(key, value);
        public static Box<ICandlestickProperty> mkCandlestickAttr(string key, object value) => Box<ICandlestickProperty>.For(key, value);
        public static Box<ICapsProperty> mkCapsAttr(string key, object value) => Box<ICapsProperty>.For(key, value);
        public static Box<ICarpetProperty> mkCarpetAttr(string key, object value) => Box<ICarpetProperty>.For(key, value);
        public static Box<ICaxisProperty> mkCaxisAttr(string key, object value) => Box<ICaxisProperty>.For(key, value);
        public static Box<ICellsProperty> mkCellsAttr(string key, object value) => Box<ICellsProperty>.For(key, value);
        public static Box<ICenterProperty> mkCenterAttr(string key, object value) => Box<ICenterProperty>.For(key, value);
        public static Box<IChoroplethProperty> mkChoroplethAttr(string key, object value) => Box<IChoroplethProperty>.For(key, value);
        public static Box<IChoroplethmapboxProperty> mkChoroplethmapboxAttr(string key, object value) => Box<IChoroplethmapboxProperty>.For(key, value);
        public static Box<ICircleProperty> mkCircleAttr(string key, object value) => Box<ICircleProperty>.For(key, value);
        public static Box<IColoraxisProperty> mkColoraxisAttr(string key, object value) => Box<IColoraxisProperty>.For(key, value);
        public static Box<IColorbarProperty> mkColorbarAttr(string key, object value) => Box<IColorbarProperty>.For(key, value);
        public static Box<IColorscaleProperty> mkColorscaleAttr(string key, object value) => Box<IColorscaleProperty>.For(key, value);
        public static Box<IColorscalesProperty> mkColorscalesAttr(string key, object value) => Box<IColorscalesProperty>.For(key, value);
        public static Box<IConcentrationscalesProperty> mkConcentrationscalesAttr(string key, object value) => Box<IConcentrationscalesProperty>.For(key, value);
        public static Box<IConeProperty> mkConeAttr(string key, object value) => Box<IConeProperty>.For(key, value);
        public static Box<IConfigProperty> mkConfigAttr(string key, object value) => Box<IConfigProperty>.For(key, value);
        public static Box<IConnectorProperty> mkConnectorAttr(string key, object value) => Box<IConnectorProperty>.For(key, value);
        public static Box<IContourProperty> mkContourAttr(string key, object value) => Box<IContourProperty>.For(key, value);
        public static Box<IContourcarpetProperty> mkContourcarpetAttr(string key, object value) => Box<IContourcarpetProperty>.For(key, value);
        public static Box<IContoursProperty> mkContoursAttr(string key, object value) => Box<IContoursProperty>.For(key, value);
        public static Box<ICumulativeProperty> mkCumulativeAttr(string key, object value) => Box<ICumulativeProperty>.For(key, value);
        public static Box<ICurrentvalueProperty> mkCurrentvalueAttr(string key, object value) => Box<ICurrentvalueProperty>.For(key, value);
        public static Box<IDecreasingProperty> mkDecreasingAttr(string key, object value) => Box<IDecreasingProperty>.For(key, value);
        public static Box<IDeltaProperty> mkDeltaAttr(string key, object value) => Box<IDeltaProperty>.For(key, value);
        public static Box<IDensitymapboxProperty> mkDensitymapboxAttr(string key, object value) => Box<IDensitymapboxProperty>.For(key, value);
        public static Box<IDiagonalProperty> mkDiagonalAttr(string key, object value) => Box<IDiagonalProperty>.For(key, value);
        public static Box<IDimensionProperty> mkDimensionAttr(string key, object value) => Box<IDimensionProperty>.For(key, value);
        public static Box<IDimensionsProperty> mkDimensionsAttr(string key, object value) => Box<IDimensionsProperty>.For(key, value);
        public static Box<IDomainProperty> mkDomainAttr(string key, object value) => Box<IDomainProperty>.For(key, value);
        public static Box<IEditsProperty> mkEditsAttr(string key, object value) => Box<IEditsProperty>.For(key, value);
        public static Box<IErrorXProperty> mkErrorXAttr(string key, object value) => Box<IErrorXProperty>.For(key, value);
        public static Box<IErrorYProperty> mkErrorYAttr(string key, object value) => Box<IErrorYProperty>.For(key, value);
        public static Box<IErrorZProperty> mkErrorZAttr(string key, object value) => Box<IErrorZProperty>.For(key, value);
        public static Box<IEyeProperty> mkEyeAttr(string key, object value) => Box<IEyeProperty>.For(key, value);
        public static Box<IFillProperty> mkFillAttr(string key, object value) => Box<IFillProperty>.For(key, value);
        public static Box<IFilterProperty> mkFilterAttr(string key, object value) => Box<IFilterProperty>.For(key, value);
        public static Box<IFontProperty> mkFontAttr(string key, object value) => Box<IFontProperty>.For(key, value);
        public static Box<IFrameProperty> mkFrameAttr(string key, object value) => Box<IFrameProperty>.For(key, value);
        public static Box<IFramesEntryProperty> mkFramesEntryAttr(string key, object value) => Box<IFramesEntryProperty>.For(key, value);
        public static Box<IFramesProperty> mkFramesAttr(string key, object value) => Box<IFramesProperty>.For(key, value);
        public static Box<IFunnelProperty> mkFunnelAttr(string key, object value) => Box<IFunnelProperty>.For(key, value);
        public static Box<IFunnelareaProperty> mkFunnelareaAttr(string key, object value) => Box<IFunnelareaProperty>.For(key, value);
        public static Box<IGaugeProperty> mkGaugeAttr(string key, object value) => Box<IGaugeProperty>.For(key, value);
        public static Box<IGeoProperty> mkGeoAttr(string key, object value) => Box<IGeoProperty>.For(key, value);
        public static Box<IGradientProperty> mkGradientAttr(string key, object value) => Box<IGradientProperty>.For(key, value);
        public static Box<IGridProperty> mkGridAttr(string key, object value) => Box<IGridProperty>.For(key, value);
        public static Box<IGroupbyProperty> mkGroupbyAttr(string key, object value) => Box<IGroupbyProperty>.For(key, value);
        public static Box<IHeaderProperty> mkHeaderAttr(string key, object value) => Box<IHeaderProperty>.For(key, value);
        public static Box<IHeatmapProperty> mkHeatmapAttr(string key, object value) => Box<IHeatmapProperty>.For(key, value);
        public static Box<IHeatmapglProperty> mkHeatmapglAttr(string key, object value) => Box<IHeatmapglProperty>.For(key, value);
        public static Box<IHistogram2dProperty> mkHistogram2dAttr(string key, object value) => Box<IHistogram2dProperty>.For(key, value);
        public static Box<IHistogram2dcontourProperty> mkHistogram2dcontourAttr(string key, object value) => Box<IHistogram2dcontourProperty>.For(key, value);
        public static Box<IHistogramProperty> mkHistogramAttr(string key, object value) => Box<IHistogramProperty>.For(key, value);
        public static Box<IHoverlabelProperty> mkHoverlabelAttr(string key, object value) => Box<IHoverlabelProperty>.For(key, value);
        public static Box<IImageProperty> mkImageAttr(string key, object value) => Box<IImageProperty>.For(key, value);
        public static Box<IImagesProperty> mkImagesAttr(string key, object value) => Box<IImagesProperty>.For(key, value);
        public static Box<IIncreasingProperty> mkIncreasingAttr(string key, object value) => Box<IIncreasingProperty>.For(key, value);
        public static Box<IIndicatorProperty> mkIndicatorAttr(string key, object value) => Box<IIndicatorProperty>.For(key, value);
        public static Box<IInsidetextfontProperty> mkInsidetextfontAttr(string key, object value) => Box<IInsidetextfontProperty>.For(key, value);
        public static Box<IIsosurfaceProperty> mkIsosurfaceAttr(string key, object value) => Box<IIsosurfaceProperty>.For(key, value);
        public static Box<ILabelfontProperty> mkLabelfontAttr(string key, object value) => Box<ILabelfontProperty>.For(key, value);
        public static Box<ILataxisProperty> mkLataxisAttr(string key, object value) => Box<ILataxisProperty>.For(key, value);
        public static Box<ILayerProperty> mkLayerAttr(string key, object value) => Box<ILayerProperty>.For(key, value);
        public static Box<ILayersProperty> mkLayersAttr(string key, object value) => Box<ILayersProperty>.For(key, value);
        public static Box<ILayoutProperty> mkLayoutAttr(string key, object value) => Box<ILayoutProperty>.For(key, value);
        public static Box<ILeafProperty> mkLeafAttr(string key, object value) => Box<ILeafProperty>.For(key, value);
        public static Box<ILegendProperty> mkLegendAttr(string key, object value) => Box<ILegendProperty>.For(key, value);
        public static Box<ILightingProperty> mkLightingAttr(string key, object value) => Box<ILightingProperty>.For(key, value);
        public static Box<ILightpositionProperty> mkLightpositionAttr(string key, object value) => Box<ILightpositionProperty>.For(key, value);
        public static Box<ILineProperty> mkLineAttr(string key, object value) => Box<ILineProperty>.For(key, value);
        public static Box<ILinkProperty> mkLinkAttr(string key, object value) => Box<ILinkProperty>.For(key, value);
        public static Box<ILonaxisProperty> mkLonaxisAttr(string key, object value) => Box<ILonaxisProperty>.For(key, value);
        public static Box<IMapboxProperty> mkMapboxAttr(string key, object value) => Box<IMapboxProperty>.For(key, value);
        public static Box<IMarginProperty> mkMarginAttr(string key, object value) => Box<IMarginProperty>.For(key, value);
        public static Box<IMarkerProperty> mkMarkerAttr(string key, object value) => Box<IMarkerProperty>.For(key, value);
        public static Box<IMeanlineProperty> mkMeanlineAttr(string key, object value) => Box<IMeanlineProperty>.For(key, value);
        public static Box<IMesh3dProperty> mkMesh3dAttr(string key, object value) => Box<IMesh3dProperty>.For(key, value);
        public static Box<IModebarProperty> mkModebarAttr(string key, object value) => Box<IModebarProperty>.For(key, value);
        public static Box<INodeProperty> mkNodeAttr(string key, object value) => Box<INodeProperty>.For(key, value);
        public static Box<INumberProperty> mkNumberAttr(string key, object value) => Box<INumberProperty>.For(key, value);
        public static Box<IOhlcProperty> mkOhlcAttr(string key, object value) => Box<IOhlcProperty>.For(key, value);
        public static Box<IOutsidetextfontProperty> mkOutsidetextfontAttr(string key, object value) => Box<IOutsidetextfontProperty>.For(key, value);
        public static Box<IPadProperty> mkPadAttr(string key, object value) => Box<IPadProperty>.For(key, value);
        public static Box<IParcatsProperty> mkParcatsAttr(string key, object value) => Box<IParcatsProperty>.For(key, value);
        public static Box<IParcoordsProperty> mkParcoordsAttr(string key, object value) => Box<IParcoordsProperty>.For(key, value);
        public static Box<IPathbarProperty> mkPathbarAttr(string key, object value) => Box<IPathbarProperty>.For(key, value);
        public static Box<IPieProperty> mkPieAttr(string key, object value) => Box<IPieProperty>.For(key, value);
        public static Box<IPointcloudProperty> mkPointcloudAttr(string key, object value) => Box<IPointcloudProperty>.For(key, value);
        public static Box<IPolarProperty> mkPolarAttr(string key, object value) => Box<IPolarProperty>.For(key, value);
        public static Box<IProjectProperty> mkProjectAttr(string key, object value) => Box<IProjectProperty>.For(key, value);
        public static Box<IProjectionProperty> mkProjectionAttr(string key, object value) => Box<IProjectionProperty>.For(key, value);
        public static Box<IRadialaxisProperty> mkRadialaxisAttr(string key, object value) => Box<IRadialaxisProperty>.For(key, value);
        public static Box<IRangefontProperty> mkRangefontAttr(string key, object value) => Box<IRangefontProperty>.For(key, value);
        public static Box<IRangeselectorProperty> mkRangeselectorAttr(string key, object value) => Box<IRangeselectorProperty>.For(key, value);
        public static Box<IRangesliderProperty> mkRangesliderAttr(string key, object value) => Box<IRangesliderProperty>.For(key, value);
        public static Box<IRotationProperty> mkRotationAttr(string key, object value) => Box<IRotationProperty>.For(key, value);
        public static Box<ISankeyProperty> mkSankeyAttr(string key, object value) => Box<ISankeyProperty>.For(key, value);
        public static Box<IScatter3dProperty> mkScatter3dAttr(string key, object value) => Box<IScatter3dProperty>.For(key, value);
        public static Box<IScatterProperty> mkScatterAttr(string key, object value) => Box<IScatterProperty>.For(key, value);
        public static Box<IScattercarpetProperty> mkScattercarpetAttr(string key, object value) => Box<IScattercarpetProperty>.For(key, value);
        public static Box<IScattergeoProperty> mkScattergeoAttr(string key, object value) => Box<IScattergeoProperty>.For(key, value);
        public static Box<IScatterglProperty> mkScatterglAttr(string key, object value) => Box<IScatterglProperty>.For(key, value);
        public static Box<IScattermapboxProperty> mkScattermapboxAttr(string key, object value) => Box<IScattermapboxProperty>.For(key, value);
        public static Box<IScatterpolarProperty> mkScatterpolarAttr(string key, object value) => Box<IScatterpolarProperty>.For(key, value);
        public static Box<IScatterpolarglProperty> mkScatterpolarglAttr(string key, object value) => Box<IScatterpolarglProperty>.For(key, value);
        public static Box<IScatterternaryProperty> mkScatterternaryAttr(string key, object value) => Box<IScatterternaryProperty>.For(key, value);
        public static Box<ISceneProperty> mkSceneAttr(string key, object value) => Box<ISceneProperty>.For(key, value);
        public static Box<ISelectedProperty> mkSelectedAttr(string key, object value) => Box<ISelectedProperty>.For(key, value);
        public static Box<IShapeProperty> mkShapeAttr(string key, object value) => Box<IShapeProperty>.For(key, value);
        public static Box<IShapesProperty> mkShapesAttr(string key, object value) => Box<IShapesProperty>.For(key, value);
        public static Box<ISlicesProperty> mkSlicesAttr(string key, object value) => Box<ISlicesProperty>.For(key, value);
        public static Box<ISliderProperty> mkSliderAttr(string key, object value) => Box<ISliderProperty>.For(key, value);
        public static Box<ISlidersProperty> mkSlidersAttr(string key, object value) => Box<ISlidersProperty>.For(key, value);
        public static Box<ISortProperty> mkSortAttr(string key, object value) => Box<ISortProperty>.For(key, value);
        public static Box<ISpaceframeProperty> mkSpaceframeAttr(string key, object value) => Box<ISpaceframeProperty>.For(key, value);
        public static Box<ISplomProperty> mkSplomAttr(string key, object value) => Box<ISplomProperty>.For(key, value);
        public static Box<IStartsProperty> mkStartsAttr(string key, object value) => Box<IStartsProperty>.For(key, value);
        public static Box<IStepProperty> mkStepAttr(string key, object value) => Box<IStepProperty>.For(key, value);
        public static Box<IStepsProperty> mkStepsAttr(string key, object value) => Box<IStepsProperty>.For(key, value);
        public static Box<IStreamProperty> mkStreamAttr(string key, object value) => Box<IStreamProperty>.For(key, value);
        public static Box<IStreamtubeProperty> mkStreamtubeAttr(string key, object value) => Box<IStreamtubeProperty>.For(key, value);
        public static Box<IStyleProperty> mkStyleAttr(string key, object value) => Box<IStyleProperty>.For(key, value);
        public static Box<IStylesProperty> mkStylesAttr(string key, object value) => Box<IStylesProperty>.For(key, value);
        public static Box<ISunburstProperty> mkSunburstAttr(string key, object value) => Box<ISunburstProperty>.For(key, value);
        public static Box<ISurfaceProperty> mkSurfaceAttr(string key, object value) => Box<ISurfaceProperty>.For(key, value);
        public static Box<ISymbolProperty> mkSymbolAttr(string key, object value) => Box<ISymbolProperty>.For(key, value);
        public static Box<ITableProperty> mkTableAttr(string key, object value) => Box<ITableProperty>.For(key, value);
        public static Box<ITernaryProperty> mkTernaryAttr(string key, object value) => Box<ITernaryProperty>.For(key, value);
        public static Box<ITextfontProperty> mkTextfontAttr(string key, object value) => Box<ITextfontProperty>.For(key, value);
        public static Box<IThresholdProperty> mkThresholdAttr(string key, object value) => Box<IThresholdProperty>.For(key, value);
        public static Box<ITickfontProperty> mkTickfontAttr(string key, object value) => Box<ITickfontProperty>.For(key, value);
        public static Box<ITickformatstopProperty> mkTickformatstopAttr(string key, object value) => Box<ITickformatstopProperty>.For(key, value);
        public static Box<ITickformatstopsProperty> mkTickformatstopsAttr(string key, object value) => Box<ITickformatstopsProperty>.For(key, value);
        public static Box<ITilingProperty> mkTilingAttr(string key, object value) => Box<ITilingProperty>.For(key, value);
        public static Box<ITitleProperty> mkTitleAttr(string key, object value) => Box<ITitleProperty>.For(key, value);
        public static Box<ITotalsProperty> mkTotalsAttr(string key, object value) => Box<ITotalsProperty>.For(key, value);
        public static Box<ITracesProperty> mkTracesAttr(string key, object value) => Box<ITracesProperty>.For(key, value);
        public static Box<ITransformsProperty> mkTransformsAttr(string key, object value) => Box<ITransformsProperty>.For(key, value);
        public static Box<ITransitionProperty> mkTransitionAttr(string key, object value) => Box<ITransitionProperty>.For(key, value);
        public static Box<ITreemapProperty> mkTreemapAttr(string key, object value) => Box<ITreemapProperty>.For(key, value);
        public static Box<IUniformtextProperty> mkUniformtextAttr(string key, object value) => Box<IUniformtextProperty>.For(key, value);
        public static Box<IUnselectedProperty> mkUnselectedAttr(string key, object value) => Box<IUnselectedProperty>.For(key, value);
        public static Box<IUpProperty> mkUpAttr(string key, object value) => Box<IUpProperty>.For(key, value);
        public static Box<IUpdatemenuProperty> mkUpdatemenuAttr(string key, object value) => Box<IUpdatemenuProperty>.For(key, value);
        public static Box<IUpdatemenusProperty> mkUpdatemenusAttr(string key, object value) => Box<IUpdatemenusProperty>.For(key, value);
        public static Box<IViolinProperty> mkViolinAttr(string key, object value) => Box<IViolinProperty>.For(key, value);
        public static Box<IVolumeProperty> mkVolumeAttr(string key, object value) => Box<IVolumeProperty>.For(key, value);
        public static Box<IWaterfallProperty> mkWaterfallAttr(string key, object value) => Box<IWaterfallProperty>.For(key, value);
        public static Box<IXProperty> mkXAttr(string key, object value) => Box<IXProperty>.For(key, value);
        public static Box<IXaxisProperty> mkXaxisAttr(string key, object value) => Box<IXaxisProperty>.For(key, value);
        public static Box<IXbinsProperty> mkXbinsAttr(string key, object value) => Box<IXbinsProperty>.For(key, value);
        public static Box<IYProperty> mkYAttr(string key, object value) => Box<IYProperty>.For(key, value);
        public static Box<IYaxisProperty> mkYaxisAttr(string key, object value) => Box<IYaxisProperty>.For(key, value);
        public static Box<IYbinsProperty> mkYbinsAttr(string key, object value) => Box<IYbinsProperty>.For(key, value);
        public static Box<IZProperty> mkZAttr(string key, object value) => Box<IZProperty>.For(key, value);
        public static Box<IZaxisProperty> mkZaxisAttr(string key, object value) => Box<IZaxisProperty>.For(key, value);
    }
}